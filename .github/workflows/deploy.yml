# Cloud Trading Bot Deployment Workflow
# This workflow deploys the AWS infrastructure and can be triggered manually
# using the "Run workflow" button via workflow_dispatch in the GitHub Actions UI

name: Deploy Cloud Trading Bot

"on":
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'prod'
        type: choice
        options:
          - prod
          - staging
      aws_region:
        description: 'AWS region for deployment'
        required: false
        default: 'us-west-2'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.aws_region || 'us-west-2' }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.0
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_Version9.txt
        
    - name: Deploy infrastructure
      env:
        AWS_REGION: ${{ github.event.inputs.aws_region || 'us-west-2' }}
        ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}
      run: |
        chmod +x scripts/deploy.sh
        ./scripts/deploy.sh
        
    - name: Upload deployment outputs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: terraform-outputs
        path: infrastructure/terraform/terraform_outputs.json
        retention-days: 30